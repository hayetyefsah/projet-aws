version: 0.2

env:
  variables:
    AWS_DEFAULT_REGION: eu-west-2
    AWS_ACCOUNT_ID: 639962416620  
    IMAGE_REPO_NAME: arch-ad-service-repository

    REPOSITORY_URI: https://git-codecommit.eu-west-2.amazonaws.com/v1/repos/ARCH-ad-service

phases:

  install:
    commands:
      - echo "Nothing to install while using latest Amazon Linux Docker Image for CodeBuild..."
      # https://github.com/aws/aws-codebuild-docker-images/blob/master/al2/x86_64/standard/3.0/Dockerfile

  pre_build:
    commands:
      # Connexion à ECR :
      - echo "Logging in to ECR..."
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com

      # Création de l'étiquette pour l'image Docker (date, heure + CodeBuild) :
      - IMAGE_TAG="$(date +%Y-%m-%d.%H.%M.%S).$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | head -c 8)"      
      # Mise à jour de l'étiquette de l'image dans le manifeste du déploiement Kubernetes :
      - echo "Updating image tag in kube-manifest..."
      # - sed -i 's@CONTAINER_IMAGE@'"$REPOSITORY_URI:$IMAGE_TAG"'@' manifest/adservice.yaml      
      # Mise à jour de Kube config Home Directory
      - export KUBECONFIG=$HOME/.kube/config

  build:
    commands:
      # Construction de l'image Docker
      - echo "Build started on `date`"
      - echo "Building the Docker image..." 
      - docker build -t $IMAGE_REPO_NAME:$IMAGE_TAG .
      # - docker build --tag $REPOSITORY_URI:$TAG .
      # Vérifier la validité de l'une ou l'autre des deux lignes du build
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
      # Vérifier la pertinence de l'attribution de l'étiquette      
  
  post_build:
    commands:
      # Envoi de l'image Docker dans le répertoire ECR
      - echo "Build completed on `date`"
      - echo "Pushing the Docker image..."
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG

      # - docker push $REPOSITORY_URI:$IMAGE_TAG      
      - echo "Docker image push to ECR completed - $IMAGE_REPO_NAME:$IMAGE_TAG"
      # Mise en place de kubectl avec le cluster EKS
      - echo "Updating kubeconfig..."      
      - aws eks update-kubeconfig --name ARCH-cluster
      # Changements de l'application
      - echo "Applying changes to kube manifest..."            
      - kubectl apply -f manifest/ # Vérifier si le fichier est à préciser
      - echo "Completed applying changes to Kubernetes objects"

artifacts:
  files:   
    - manifest/*yaml